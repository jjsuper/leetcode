{"c++":"class Solution {\r\npublic:\r\n    int totalHammingDistance(vector<int>& nums) {\r\n        if(nums.size()<2) return 0;\r\n        int res=0;\r\n        \r\n        int cnt=0;\r\n        while(cnt!=nums.size()) {\r\n            int One=0;\r\n\r\n            cnt=0;\r\n            for(int i=0; i<nums.size(); ++i) {\r\n                if(!nums[i]) cnt++;\r\n                if(nums[i]%2) One++;\r\n                nums[i] = nums[i] >>1;\r\n            }\r\n            \r\n            res+=One*(nums.size()-One);\r\n            \r\n        }\r\n        \r\n    \r\n        \r\n        return res;\r\n        /*\r\n        int size = nums.size();\r\n        if(size < 2) return 0;\r\n        int ans = 0;\r\n        int *zeroOne = new int[2];\r\n        while(true)\r\n        {\r\n            int zeroCount = 0;\r\n            zeroOne[0] = 0;\r\n            zeroOne[1] = 0;\r\n            for(int i = 0; i < nums.size(); i++)\r\n            {\r\n                if(nums[i] == 0) zeroCount++;\r\n                zeroOne[nums[i] % 2]++;\r\n                nums[i] = nums[i] >> 1;\r\n            }\r\n            ans += zeroOne[0] * zeroOne[1];\r\n            if(zeroCount == nums.size()) return ans;\r\n        }*/\r\n    }\r\n};"}