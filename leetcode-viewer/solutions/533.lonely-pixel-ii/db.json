{"c++":"class Solution {\r\npublic:\r\n    int findBlackPixel(vector<vector<char>>& picture, int N) {\r\n        if(picture.empty() || picture[0].empty()) return 0;\r\n        \r\n        int m=picture.size(), n=picture[0].size();\r\n        int res=0;\r\n        \r\n        unordered_map<int, unordered_set<int>> row;\r\n        unordered_map<int, unordered_set<int>> col;\r\n        \r\n        for(int i=0; i<m; ++i)\r\n            for(int j=0; j<n; ++j) \r\n                if(picture[i][j]=='B') {\r\n                    row[i].insert(j);\r\n                    col[j].insert(i);\r\n                }\r\n        \r\n        for(int i=0; i<m; ++i)\r\n            for(int j=0; j<n && row[i].size() == N; ++j) \r\n                if(picture[i][j]=='B' && col[j].size()==N) {\r\n                   bool lonely=true;\r\n                   for(int k: col[j]) {\r\n                       if(row[k]!=row[i]) {\r\n                           lonely=false;\r\n                           break;\r\n                       }\r\n                   } \r\n                   res+=lonely;\r\n                }        \r\n        \r\n        return res;\r\n    }\r\n};"}