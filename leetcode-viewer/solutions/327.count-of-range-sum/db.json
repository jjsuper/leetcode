{"c++":"class Solution {\r\npublic:\r\n    int countRangeSum(vector<int>& nums, int lower, int upper) {\r\n        \r\n        vector<long> sums(nums.size()+1, 0);\r\n        \r\n        for(int i=0; i<nums.size(); ++i) {\r\n            sums[i+1]=sums[i]+nums[i];\r\n        }\r\n        \r\n        return mergesort(sums, 0, sums.size(), lower, upper);\r\n    }\r\nprivate:\r\n    int mergesort(vector<long>& sums, int start, int end, int lower, int upper) {\r\n        if(start+1>=end) return 0;\r\n        //if(start+1==end && sums[start]>=lower && sums[start]<=lower) return 1; \r\n        \r\n        int mid=(start+end)/2;\r\n        int cnt=mergesort(sums, start, mid, lower, upper)+mergesort(sums, mid, end, lower, upper);\r\n        \r\n        int i=start, j=mid, k=mid;\r\n        \r\n        while(i<mid) {\r\n            while(j<end && sums[j]-sums[i]<lower) j++;\r\n            while(k<end && sums[k]-sums[i]<=upper) k++;\r\n            cnt+= k-j;\r\n            i++;\r\n        }\r\n\r\n        \r\n        vector<long> tmp(end-start, 0);\r\n        int idx1=start, idx2=mid;\r\n        \r\n        while(idx1<mid || idx2<end) {\r\n            if(idx2==end || (idx1<mid && sums[idx1]<=sums[idx2])) {\r\n                tmp[idx1-start+idx2-mid]=sums[idx1++];\r\n            }\r\n            else {\r\n                tmp[idx1-start+idx2-mid]=sums[idx2++];\r\n            }\r\n        }\r\n        \r\n        for(int i=start; i<end; ++i) {\r\n            sums[i]=tmp[i-start];\r\n        }\r\n        \r\n        \r\n        return cnt;\r\n    }\r\n};"}