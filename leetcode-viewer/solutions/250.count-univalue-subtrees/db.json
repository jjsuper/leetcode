{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int countUnivalSubtrees(TreeNode* root) {\r\n        if(root==NULL) return 0;\r\n        \r\n        int left=countUnivalSubtrees(root->left);\r\n        int right=countUnivalSubtrees(root->right);\r\n        \r\n        if(isUnival(root, root->val))\r\n            return left+right+1;\r\n        else\r\n            return left+right;\r\n    }\r\n    \r\nprivate:\r\n    bool isUnival(TreeNode *root, int val) {\r\n        if (!root) return true;\r\n        return root->val == val && isUnival(root->left, val) && isUnival(root->right, val);\r\n    }\r\n};"}