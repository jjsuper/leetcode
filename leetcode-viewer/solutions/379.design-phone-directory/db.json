{"c++":"class PhoneDirectory {\r\nprivate:\r\n    vector<bool> used;\r\n    queue<int> freelist;\r\n    int maxNum;\r\npublic:\r\n    /** Initialize your data structure here\r\n        @param maxNumbers - The maximum numbers that can be stored in the phone directory. */\r\n    PhoneDirectory(int maxNumbers) {\r\n        maxNum=maxNumbers;\r\n        used.assign(maxNum, 0);\r\n        for(int i=0; i<maxNum; ++i) freelist.push(i);\r\n    }\r\n    \r\n    /** Provide a number which is not assigned to anyone.\r\n        @return - Return an available number. Return -1 if none is available. */\r\n    int get() {\r\n        if(!freelist.empty()) {\r\n            int res=freelist.front();\r\n            freelist.pop();\r\n            used[res]=1;\r\n            return res;\r\n        }\r\n        return -1;\r\n    }\r\n    \r\n    /** Check if a number is available or not. */\r\n    bool check(int number) {\r\n        if(number>=maxNum) return false;\r\n        return !used[number];\r\n    }\r\n    \r\n    /** Recycle or release a number. */\r\n    void release(int number) {\r\n        if(number>=maxNum) return;\r\n        if(used[number]==1) freelist.push(number);\r\n        used[number]=0;\r\n    }\r\n};\r\n\r\n/**\r\n * Your PhoneDirectory object will be instantiated and called as such:\r\n * PhoneDirectory obj = new PhoneDirectory(maxNumbers);\r\n * int param_1 = obj.get();\r\n * bool param_2 = obj.check(number);\r\n * obj.release(number);\r\n */"}