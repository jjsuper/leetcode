{"c++":"class Solution {\r\npublic:\r\n    int findCircleNum(vector<vector<int>>& M) {\r\n        int n = M.size();\r\n        vector<bool> visited(n, false);\r\n        int groups=0;\r\n        for (int i = 0; i < n; ++i) {\r\n            groups += dfs(i, M, visited) > 0;\r\n        }\r\n        return groups;\r\n    }\r\nprivate:\r\n    int dfs(int i, vector<vector<int>>& M, vector<bool>& visited) {\r\n        if(visited[i] == true) return 0;\r\n        visited[i] = true;\r\n        int p = 1;\r\n        for (int j = 0; j < M.size(); ++j) {\r\n            if (i != j && M[i][j] == 1) \r\n                p += dfs(j, M, visited);\r\n        }\r\n        return p;\r\n    }\r\n};"}