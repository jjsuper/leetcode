{"c++":"class Solution {\r\npublic:\r\n    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {\r\n        unordered_set<string> s(words.begin(), words.end());\r\n        vector<string> res;\r\n        \r\n        for(auto word : words) {\r\n            if(isConcatenate(word, s)) {\r\n                res.push_back(word);\r\n            }\r\n        }\r\n        \r\n        \r\n        return res;\r\n    }\r\n    \r\n    bool isConcatenate(string word, unordered_set<string>& s) {\r\n        if(word.empty()) return 0;\r\n        bool dp[word.size()+1]={0};\r\n        dp[0]=1;\r\n        \r\n        for(int i=1; i<=word.size(); i++) {\r\n            for(int j=i-1; j>=0; --j) {\r\n                if(dp[j] && s.count(word.substr(j, i-j)) && i-j<word.size()) {\r\n                    dp[i]=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return dp[word.size()];\r\n    }\r\n    \r\n    \r\n};"}