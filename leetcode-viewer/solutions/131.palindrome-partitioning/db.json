{"c++":"class Solution {\r\npublic:\r\n    vector<vector<string>> partition(string s) {\r\n        vector<string> path;\r\n        vector<vector<string>> res;\r\n        helper(s, 0, path, res);\r\n        return res;\r\n    }    \r\n        \r\nprivate:\r\n    void helper(string s, int index, vector<string>& path, vector<vector<string>>& res) {\r\n        if(index==s.size()) {\r\n            res.push_back(path);\r\n            return;    \r\n        }\r\n        \r\n        for(int i=index; i<s.size(); ++i) {\r\n            if(isPalindrome(s.substr(index, i-index+1))) {\r\n                path.push_back(s.substr(index, i-index+1));\r\n                helper(s, i+1, path, res);\r\n                path.pop_back();\r\n            }\r\n        }\r\n    }\r\n    \r\n    bool isPalindrome(string s) {\r\n        if(s.empty()) return true;\r\n        for(int i=0; i<s.size()/2; ++i) {\r\n            if(s[i]!=s[s.size()-i-1]) return false;\r\n        }\r\n        return true;\r\n    }\r\n};"}