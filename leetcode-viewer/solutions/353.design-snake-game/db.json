{"c++":"class SnakeGame {\r\npublic:\r\n    /** Initialize your data structure here.\r\n        @param width - screen width\r\n        @param height - screen height \r\n        @param food - A list of food positions\r\n        E.g food = [[1,1], [1,0]] means the first food is positioned at [1,1], the second is at [1,0]. */\r\n    SnakeGame(int width, int height, vector<pair<int, int>> food) {\r\n        snake.push_front(make_pair(0,0));\r\n        occupy.assign(height, vector<bool>(width, 0));\r\n        occupy[0][0]=1;\r\n        this->width=width;\r\n        this->height=height;\r\n        this->food=food;\r\n        foodIndex=0;\r\n    }\r\n    \r\n    /** Moves the snake.\r\n        @param direction - 'U' = Up, 'L' = Left, 'R' = Right, 'D' = Down \r\n        @return The game's score after the move. Return -1 if game over. \r\n        Game over when snake crosses the screen boundary or bites its body. */\r\n    int move(string direction) {\r\n        pair<int, int> pos=snake.front();\r\n        pair<int, int> back=snake.back();\r\n        occupy[back.first][back.second]=0;\r\n        snake.pop_back();\r\n        \r\n        \r\n        \r\n        if(direction==\"U\") pos.first--; \r\n        else if (direction==\"L\") pos.second--;  \r\n        else if (direction==\"R\") pos.second++;\r\n        else if (direction==\"D\") pos.first++;\r\n        \r\n        if(pos.first<0 || pos.first>=height || pos.second<0 || pos.second>=width) return -1;\r\n        if(occupy[pos.first][pos.second]==1) return -1;\r\n        \r\n        snake.push_front(pos);\r\n        occupy[pos.first][pos.second]=1;\r\n        \r\n        if(foodIndex>=food.size()) return snake.size()-1;\r\n        if(pos==food[foodIndex]) {\r\n            foodIndex++;\r\n            occupy[back.first][back.second]=1;\r\n            snake.push_back(back);\r\n        }\r\n        \r\n        return snake.size()-1;\r\n    }\r\nprivate:\r\n    deque<pair<int, int>> snake;\r\n    vector<vector<bool>> occupy;\r\n    int width;\r\n    int height;\r\n    vector<pair<int, int>> food;\r\n    int foodIndex;\r\n};\r\n\r\n/**\r\n * Your SnakeGame object will be instantiated and called as such:\r\n * SnakeGame obj = new SnakeGame(width, height, food);\r\n * int param_1 = obj.move(direction);\r\n */"}