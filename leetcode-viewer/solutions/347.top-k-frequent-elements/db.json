{"c++":"class Solution {\r\npublic:\r\n    vector<int> topKFrequent(vector<int>& nums, int k) {\r\n       \r\n       std::pair<int,char> foo (10,'z');\r\n  std::pair<int,char> bar (90,'a');\r\n\r\n  if (foo==bar) std::cout << \"foo and bar are equal\\n\";\r\n  if (foo!=bar) std::cout << \"foo and bar are not equal\\n\";\r\n  if (foo< bar) std::cout << \"foo is less than bar\\n\";\r\n  if (foo> bar) std::cout << \"foo is greater than bar\\n\";\r\n  if (foo<=bar) std::cout << \"foo is less than or equal to bar\\n\";\r\n  if (foo>=bar) std::cout << \"foo is greater than or equal to bar\\n\";\r\n       \r\n       \r\n       \r\n       \r\n       \r\n       \r\n     unordered_map<int,int> map;\r\n        for(int num : nums){\r\n            map[num]++;\r\n        }\r\n\r\n        vector<int> res;\r\n        // pair<first, second>: first is frequency,  second is number\r\n        priority_queue<pair<int,int>> pq; \r\n        for(auto it = map.begin(); it != map.end(); it++){\r\n            pq.push(make_pair(it->second, it->first));\r\n            if(pq.size() > (int)map.size() - k){\r\n                res.push_back(pq.top().second);\r\n                pq.pop();\r\n            }\r\n        }\r\n        return res;\r\n        \r\n        \r\n    }\r\n};"}