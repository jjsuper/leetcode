{"c++":"/**\r\n * Definition for a point.\r\n * struct Point {\r\n *     int x;\r\n *     int y;\r\n *     Point() : x(0), y(0) {}\r\n *     Point(int a, int b) : x(a), y(b) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int maxPoints(vector<Point>& points) {\r\n        int res=0;\r\n        \r\n        for(int i=0; i<points.size(); ++i) {\r\n            map<pair<int, int>, int> hash;\r\n            int localmax=0, vertical=0, overlap=0;\r\n            \r\n            for(int j=i+1; j<points.size(); ++j) {\r\n                if(points[i].x==points[j].x && points[i].y==points[j].y) {\r\n                    overlap++;\r\n                }\r\n                else if(points[i].x==points[j].x) {\r\n                    vertical++;\r\n                }\r\n                else {\r\n                    int a=points[j].x-points[i].x, b=points[j].y-points[i].y;\r\n                    int gcd=GCD(a, b);\r\n                    a/=gcd;\r\n                    b/=gcd;\r\n                    \r\n                    hash[make_pair(a,b)]++;\r\n                    localmax=max(localmax, hash[make_pair(a,b)]);\r\n                }\r\n            }\r\n            localmax=max(localmax, vertical);\r\n            \r\n            res=max(res, localmax+overlap+1);\r\n        }\r\n        \r\n        return res;\r\n    }\r\nprivate:\r\n    int GCD(int a, int b) {\r\n        if(b==0) return a;\r\n        return GCD(b, a%b);\r\n    }\r\n};"}