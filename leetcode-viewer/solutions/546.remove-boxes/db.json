{"c++":"class Solution {\r\npublic:\r\n    int removeBoxes(vector<int>& boxes) {\r\n        int mem[100][100][100]={0};\r\n        return dfs(boxes, mem, 0, boxes.size()-1, 0);\r\n    }\r\nprivate:\r\n    int dfs(vector<int>& boxes, int mem[100][100][100], int l, int r, int k) {\r\n        if(l>r) return 0;\r\n        if(mem[l][r][k]) return mem[l][r][k];\r\n        \r\n        while(r>l && boxes[r]==boxes[r-1]) {\r\n            r--;\r\n            k++;\r\n        }\r\n        mem[l][r][k]=dfs(boxes, mem, l, r-1, 0)+(k+1)*(k+1);\r\n        for(int i=l; i<r; ++i) {\r\n            if(boxes[i]==boxes[r]) {\r\n                mem[l][r][k]=max(mem[l][r][k], dfs(boxes, mem, l, i, k+1)+dfs(boxes, mem, i+1, r-1, 0));\r\n            }\r\n        }\r\n        \r\n        \r\n        return mem[l][r][k];\r\n    }\r\n    \r\n    \r\n};"}