{"c++":"class Solution {\r\npublic:\r\n    vector<string> findWords(vector<string>& words) {\r\n        vector<string> res;\r\n        unordered_set<char> row1 {'q', 'w', 'e', 'r', 't', 'y','u', 'i', 'o', 'p'};\r\n        unordered_set<char> row2 {'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'}; \r\n        unordered_set<char> row3 { 'z', 'x', 'c', 'v', 'b' ,'n', 'm'};\r\n        vector<unordered_set<char>> rows {row1, row2, row3};\r\n        \r\n        for(string word: words) {\r\n            int row=0;\r\n            \r\n            for(int k=0; k<3; ++k)\r\n                if(rows[k].find((char)tolower(word[0])) != rows[k].end()) row = k;\r\n            \r\n                \r\n            bool valid=1;\r\n            for(int j=1; j<word.size(); ++j) \r\n                if(rows[row].find((char)tolower(word[j])) == rows[row].end()) {\r\n                    valid=0;\r\n                    break;\r\n                }\r\n  \r\n            if(valid) res.push_back(word);\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};"}