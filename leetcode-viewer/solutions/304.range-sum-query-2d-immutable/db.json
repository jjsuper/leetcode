{"c++":"class NumMatrix {\r\npublic:\r\n    NumMatrix(vector<vector<int>> matrix) {\r\n        int row=matrix.size();\r\n        int col=row>0? matrix[0].size(): 0;\r\n        sums=vector<vector<int>>(row+1, vector<int>(col+1, 0));\r\n        \r\n        for(int i=1; i<=row; ++i) {\r\n            for(int j=1; j<=col; ++j) {\r\n                sums[i][j]=sums[i-1][j]+sums[i][j-1]-sums[i-1][j-1]+matrix[i-1][j-1];\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    int sumRegion(int row1, int col1, int row2, int col2) {\r\n        return sums[row2+1][col2+1]-sums[row2+1][col1]-sums[row1][col2+1]+sums[row1][col1];\r\n    }\r\nprivate:\r\n    vector<vector<int>> sums;\r\n};\r\n\r\n/**\r\n * Your NumMatrix object will be instantiated and called as such:\r\n * NumMatrix obj = new NumMatrix(matrix);\r\n * int param_1 = obj.sumRegion(row1,col1,row2,col2);\r\n */\r\n \r\n/*\r\n+-----+-+-------+     +--------+-----+     +-----+---------+     +-----+--------+\r\n|     | |       |     |        |     |     |     |         |     |     |        |\r\n|     | |       |     |        |     |     |     |         |     |     |        |\r\n+-----+-+       |     +--------+     |     |     |         |     +-----+        |\r\n|     | |       |  =  |              |  +  |     |         |  -  |              |\r\n+-----+-+       |     |              |     +-----+         |     |              |\r\n|               |     |              |     |               |     |              |\r\n|               |     |              |     |               |     |              |\r\n+---------------+     +--------------+     +---------------+     +--------------+\r\n\r\n   sums[i][j]      =    sums[i-1][j]    +     sums[i][j-1]    -   sums[i-1][j-1]   +  \r\n\r\n                        matrix[i-1][j-1]\r\n\r\nSo, we use the same idea to find the specific area's sum.\r\n\r\n+---------------+   +--------------+   +---------------+   +--------------+   +--------------+\r\n|               |   |         |    |   |   |           |   |         |    |   |   |          |\r\n|   (r1,c1)     |   |         |    |   |   |           |   |         |    |   |   |          |\r\n|   +------+    |   |         |    |   |   |           |   +---------+    |   +---+          |\r\n|   |      |    | = |         |    | - |   |           | - |      (r1,c2) | + |   (r1,c1)    |\r\n|   |      |    |   |         |    |   |   |           |   |              |   |              |\r\n|   +------+    |   +---------+    |   +---+           |   |              |   |              |\r\n|        (r2,c2)|   |       (r2,c2)|   |   (r2,c1)     |   |              |   |              |\r\n+---------------+   +--------------+   +---------------+   +--------------+   +--------------+\r\n\r\n*/\r\n"}