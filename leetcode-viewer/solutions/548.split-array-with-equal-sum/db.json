{"c++":"class Solution {\r\npublic:\r\n    bool splitArray(vector<int>& nums) {\r\n        if (nums.size() < 7) return false;\r\n        vector<int> sum(nums.size(), 0);\r\n        sum[0] = nums[0];\r\n        for (int i = 1; i < nums.size(); ++i) {\r\n            sum[i] = sum[i-1] + nums[i];\r\n        }\r\n        \r\n        for (int j = 3; j < nums.size() - 3; ++j) {\r\n            unordered_set<int> hash;\r\n            for (int i = 1; i < j - 1; ++i) {\r\n                if (sum[i-1] == sum[j-1] - sum[i]) hash.insert(sum[i-1]);\r\n            }\r\n            for (int k = j + 2; k < nums.size() - 1; ++k) {\r\n                if (sum[nums.size()-1] - sum[k] == sum[k - 1] - sum[j] && hash.count(sum[k - 1] - sum[j])) return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    }\r\n};"}