{"c++":"class Solution {\r\npublic:\r\n    bool wordPattern(string pattern, string str) {\r\n        map<char, string> mymap;\r\n        map<char, string>::iterator it;\r\n    \r\n    \r\n    stringstream ss(str);\r\n    string s;\r\n    vector<string> vec;\r\n    while(ss >> s)\r\n    {   \r\n         vec.push_back(s);\r\n    }  \r\n    \r\n    //cout << pattern.size() << ' ' << vec.size();\r\n    \r\n    if(pattern.size()!=vec.size()) return false;\r\n    \r\n    \r\n        for(int i=0;i<pattern.size();++i)\r\n        {\r\n            it=mymap.find(pattern[i]);\r\n            if(it!=mymap.end())\r\n            {\r\n                if(it->second!=vec[i])  \r\n                {\r\n                    cout << '1';\r\n                    return false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for(it=mymap.begin();it!=mymap.end();++it)\r\n                {\r\n                    if(it->second==vec[i])\r\n                    {\r\n                        cout << '2';\r\n                        return false;\r\n                    }\r\n                }\r\n                mymap.insert(pair<char, string>(pattern[i], vec[i]));                \r\n            }\r\n        }\r\n        \r\n        \r\n        return true;\r\n    }\r\n};"}