{"c++":"class Solution {\r\npublic:\r\n    int minArea(vector<vector<char>>& image, int x, int y) {\r\n        m=image.size();\r\n        n=m? image[0].size(): 0;\r\n        \r\n        int left=searchCol(image, 0, y, true);\r\n        cout << \"left\" << left <<endl;\r\n        int right=searchCol(image, y+1, n, false);\r\n        cout << \"right\" << right <<endl;\r\n        int top=searchRow(image, 0, x, true);\r\n        cout << \"top\" << top <<endl;\r\n        int bottom=searchRow(image, x+1, m, false); \r\n        cout << \"bottom\" << bottom <<endl;\r\n        \r\n        return (right-left)*(bottom-top);\r\n    }\r\nprivate:\r\n    int m, n;\r\n\r\n    int searchCol(vector<vector<char>>& image, int low, int high, bool opt) {\r\n        while(low<high) {\r\n            int mid=(low+high)/2;\r\n            int i=0;\r\n            while(i<m && image[i][mid]=='0') i++; \r\n            if(i<m == opt) \r\n                high=mid;\r\n            else \r\n                low=mid+1;\r\n        }\r\n        return low;\r\n    }\r\n    \r\n    int searchRow(vector<vector<char>>& image, int low, int high, bool opt) {\r\n        while(low<high) {\r\n            int mid=(low+high)/2;\r\n            int i=0;\r\n            while(i<n && image[mid][i]=='0') i++; \r\n            if(i<n == opt) \r\n                high=mid;\r\n            else \r\n                low=mid+1;\r\n        }\r\n        return low;\r\n    }   \r\n    \r\n    \r\n};"}