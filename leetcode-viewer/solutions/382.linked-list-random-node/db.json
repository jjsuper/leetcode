{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    /** @param head The linked list's head.\r\n        Note that the head is guaranteed to be not null, so it contains at least one node. */\r\n    Solution(ListNode* head) {\r\n        this->head=head;\r\n    }\r\n    \r\n    /** Returns a random node's value. */\r\n    int getRandom() {\r\n        int res=head->val;\r\n        ListNode* node=head->next;\r\n        int i=2;\r\n        while(node) {\r\n            if(rand()%i==0) res=node->val;\r\n            ++i;\r\n            node=node->next;\r\n        }\r\n        return res;\r\n    }\r\nprivate:\r\n    ListNode* head;\r\n};\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(head);\r\n * int param_1 = obj.getRandom();\r\n */"}