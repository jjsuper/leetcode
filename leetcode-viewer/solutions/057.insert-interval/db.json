{"c++":"/**\r\n * Definition for an interval.\r\n * struct Interval {\r\n *     int start;\r\n *     int end;\r\n *     Interval() : start(0), end(0) {}\r\n *     Interval(int s, int e) : start(s), end(e) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<Interval> insert(vector<Interval>& intervals, Interval newInterval) {\r\n        vector<Interval> res;\r\n        int idx=0;\r\n        for(; idx<intervals.size() && intervals[idx].end<newInterval.start; ++idx) {\r\n            res.push_back(intervals[idx]);\r\n        }\r\n        \r\n        for(; idx<intervals.size() && newInterval.end>=intervals[idx].start ; ++idx) {\r\n            newInterval.start=min(newInterval.start, intervals[idx].start);\r\n            newInterval.end=max(newInterval.end, intervals[idx].end);\r\n        }\r\n        res.push_back(newInterval);\r\n        \r\n        \r\n        for(; idx<intervals.size(); ++idx) {\r\n            res.push_back(intervals[idx]);\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};"}