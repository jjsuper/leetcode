{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* sortList(ListNode* head) {\r\n        if(head==NULL || head->next==NULL) return head;\r\n        \r\n        ListNode* slow=head;\r\n        ListNode* fast=head->next;\r\n        \r\n        while(fast!=NULL && fast->next!=NULL) {\r\n            slow=slow->next;\r\n            fast=fast->next->next;\r\n        }\r\n        \r\n        fast=slow->next;\r\n        slow->next=NULL;\r\n        \r\n        return merge(sortList(head), sortList(fast));\r\n    }\r\nprivate:\r\n    ListNode* merge(ListNode* l1, ListNode* l2) {\r\n        ListNode* tmp=new ListNode(0);\r\n        ListNode* head=tmp;\r\n        \r\n        while(l1!=NULL && l2!=NULL) {\r\n            if(l1->val<l2->val) {\r\n                tmp->next=l1;\r\n                l1=l1->next;\r\n            }\r\n            else {\r\n                tmp->next=l2;\r\n                l2=l2->next;\r\n            }\r\n            tmp=tmp->next;\r\n        }\r\n        \r\n        if(l1!=NULL) \r\n            tmp->next=l1;\r\n        else\r\n            tmp->next=l2;\r\n        \r\n        return head->next;\r\n    }\r\n};"}