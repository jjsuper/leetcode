{"c++":"class NumMatrix {\r\npublic:\r\n    NumMatrix(vector<vector<int>> matrix) {\r\n        m=matrix.size();\r\n        n=m>0? matrix[0].size(): 0;\r\n        num=vector<vector<int>>(m, vector<int>(n, 0));\r\n        BIT=vector<vector<int>>(m+1, vector<int>(n+1, 0));\r\n        for(int i=0; i<m; ++i) {\r\n            for(int j=0; j<n; ++j)\r\n                update(i, j, matrix[i][j]);\r\n        }\r\n    }\r\n    \r\n    void update(int row, int col, int val) {\r\n        int diff=val-num[row][col];\r\n        num[row][col]=val;\r\n        for(int i=row+1; i<=m; i+=(i&-i)) {\r\n            for(int j=col+1; j<=n; j+=(j&-j)) {\r\n                BIT[i][j]+=diff;    \r\n            }\r\n        }\r\n    }\r\n    \r\n    int sumRegion(int row1, int col1, int row2, int col2) {\r\n        return getSum(row2+1, col2+1)-getSum(row2+1, col1)-getSum(row1, col2+1)+getSum(row1, col1);\r\n    }\r\n    \r\n    int getSum(int row, int col) {\r\n        int sum=0;\r\n        for(int i=row; i>0; i-=(i&-i)) {\r\n            for(int j=col; j>0; j-=(j&-j)) {\r\n                sum+=BIT[i][j];\r\n            }   \r\n        }\r\n        return sum;\r\n    }\r\n    \r\nprivate:\r\n    vector<vector<int>> BIT;\r\n    vector<vector<int>> num;\r\n    int m;\r\n    int n;\r\n};\r\n\r\n/**\r\n * Your NumMatrix object will be instantiated and called as such:\r\n * NumMatrix obj = new NumMatrix(matrix);\r\n * obj.update(row,col,val);\r\n * int param_2 = obj.sumRegion(row1,col1,row2,col2);\r\n */"}