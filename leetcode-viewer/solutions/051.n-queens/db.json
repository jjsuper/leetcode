{"c++":"class Solution {\r\npublic:\r\n    vector<vector<string>> solveNQueens(int n) {\r\n        vector<vector<string>> res;\r\n        vector<string> nQueens(n, string(n, '.'));\r\n        fcol.assign(n, 1);\r\n        fdiagonal.assign(2*n-1, 1);\r\n        fantidiagonal.assign(2*n-1, 1);\r\n        solveNQueens(res, nQueens, 0, n);\r\n        return res;\r\n    }\r\nprivate:\r\n    vector<bool> fcol;\r\n    vector<bool> fdiagonal;\r\n    vector<bool> fantidiagonal;\r\n    \r\n    void solveNQueens(vector<vector<string>>& res, vector<string>& nQueens, int row, int n) {\r\n        if(row==n) {\r\n            res.push_back(nQueens);\r\n            return;\r\n        }\r\n        \r\n        for(int col=0; col<n; ++col) {\r\n            if(fcol[col] && fdiagonal[col-row+n-1] && fantidiagonal[row+col]) {\r\n                fcol[col]=fdiagonal[col-row+n-1]=fantidiagonal[row+col]=0;\r\n                nQueens[row][col]='Q';\r\n                solveNQueens(res, nQueens, row+1, n);\r\n                nQueens[row][col]='.';\r\n                fcol[col]=fdiagonal[col-row+n-1]=fantidiagonal[row+col]=1;\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n};"}