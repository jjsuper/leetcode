{"c++":"class WordDistance {\r\npublic:\r\n    WordDistance(vector<string> words) {\r\n        for(int i=0; i<words.size(); ++i) {\r\n            hash[words[i]].push_back(i);\r\n        }\r\n    }\r\n    \r\n    int shortest(string word1, string word2) {\r\n        int res=INT_MAX;\r\n        int idx1=0, idx2=0;\r\n        \r\n        while(idx1<hash[word1].size() && idx2<hash[word2].size()) {\r\n            int tmp=abs(hash[word1][idx1]-hash[word2][idx2]);\r\n            res=min(res,tmp);\r\n            if(hash[word1][idx1]<hash[word2][idx2]) {\r\n                idx1++;\r\n            }\r\n            else {\r\n                idx2++;\r\n            }\r\n            \r\n        }\r\n        \r\n        return res;\r\n    }\r\nprivate:\r\n    unordered_map<string, vector<int>> hash;\r\n};\r\n\r\n/**\r\n * Your WordDistance object will be instantiated and called as such:\r\n * WordDistance obj = new WordDistance(words);\r\n * int param_1 = obj.shortest(word1,word2);\r\n */"}