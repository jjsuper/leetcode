{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isPalindrome(ListNode* head) {\r\n                if(!head || !head->next) return true;\r\n        ListNode * fast = head, * slow = head;\r\n        while(fast->next && fast->next->next){\r\n            fast = fast->next->next;\r\n            slow = slow->next;\r\n        }\r\n        ListNode * head1 = head;\r\n        ListNode * head2 = invertList(slow->next);//reverse last half Linked list \r\n        int res = true;\r\n        while(head2){\r\n            if(head1->val != head2->val){\r\n                res = false;\r\n                break;\r\n            }\r\n            head1 = head1->next;\r\n            head2 = head2->next;\r\n        }\r\n        slow->next = invertList(slow->next);//recover\r\n        return res;\r\n    }\r\n\r\n    ListNode* invertList(ListNode* head){\r\n        ListNode * p = nullptr, * cur = head;\r\n        while(cur){\r\n            ListNode * tmp = cur->next;\r\n            cur->next = p;\r\n            p = cur;\r\n            cur = tmp;\r\n        }\r\n        return p;\r\n    \r\n        \r\n        \r\n    }\r\n};"}