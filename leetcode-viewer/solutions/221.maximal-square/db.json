{"c++":"class Solution {\r\npublic:\r\n    int maximalSquare(vector<vector<char>>& matrix) {\r\n        int m=matrix.size(), n=m? matrix[0].size(): 0;\r\n        vector<vector<int>> dp(m, vector<int>(n, 0));\r\n        int maxsize=0;\r\n        \r\n        for(int i=0; i<m; ++i) {\r\n            dp[i][0]=matrix[i][0]-'0';\r\n            maxsize=max(maxsize, dp[i][0]);\r\n        }\r\n        for(int j=0; j<n; ++j) {\r\n            dp[0][j]=matrix[0][j]-'0';\r\n            maxsize=max(maxsize, dp[0][j]);\r\n        }\r\n        for(int i=1; i<m; ++i) {\r\n            for(int j=1; j<n; ++j) {\r\n                if(matrix[i][j]=='1') {\r\n                    dp[i][j]=min(dp[i-1][j], min(dp[i][j-1], dp[i-1][j-1]))+1;\r\n                    maxsize=max(maxsize, dp[i][j]);\r\n                }\r\n            }\r\n        }\r\n  \r\n        return maxsize*maxsize;\r\n    }\r\n};"}