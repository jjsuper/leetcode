{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {\r\n        ListNode *out;\r\n        ListNode *pout;\r\n        ListNode *tmp;\r\n        pout = new ListNode(0);\r\n        out = pout;\r\n        int c =0;\r\n        int s;\r\n        \r\n        while(l1 && l2)\r\n        {\r\n            s = ( l1->val + l2->val + c ) % 10;\r\n            c = ( l1->val + l2->val + c ) / 10;\r\n            tmp = new ListNode(s);\r\n            pout->next = tmp; \r\n            \r\n            l1=l1->next;\r\n            l2=l2->next;\r\n            pout=pout->next;\r\n        }\r\n          \r\n        while(l1)\r\n        {\r\n            s = ( l1->val + c ) % 10;\r\n            c = ( l1->val + c ) / 10; \r\n            \r\n            tmp = new ListNode(s);\r\n            pout->next = tmp; \r\n            \r\n            l1=l1->next;\r\n            pout=pout->next;\r\n        }     \r\n        \r\n        while(l2)\r\n        {\r\n            s = ( l2->val + c ) % 10;\r\n            c = ( l2->val + c ) / 10; \r\n            \r\n            tmp = new ListNode(s);\r\n            pout->next = tmp; \r\n            \r\n            l2=l2->next;\r\n            pout=pout->next;\r\n        }\r\n        \r\n        if(c!=0)\r\n        {\r\n            tmp = new ListNode(c);\r\n            pout->next = tmp;\r\n            pout=pout->next;\r\n        }\r\n        \r\n        \r\n        return out->next;\r\n    }\r\n};"}