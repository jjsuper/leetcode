{"c++":"class Solution {\r\npublic:\r\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\r\n        sort(candidates.begin(), candidates.end());\r\n        vector<vector<int>> res;\r\n        vector<int> combination;\r\n        combinationCal(candidates, target, res, combination, 0);\r\n        return res;\r\n    }\r\n    \r\n    void combinationCal(vector<int>& candidates, int target, vector<vector<int>>& res, vector<int>& combination, int begin)\r\n    {\r\n        if(!target)\r\n        {\r\n            res.push_back(combination);\r\n        }\r\n        for(int i=begin; i<candidates.size() && candidates[i]<=target; ++i)\r\n        {\r\n            combination.push_back(candidates[i]);\r\n            combinationCal(candidates, target-candidates[i], res, combination, i);\r\n            combination.pop_back();\r\n        }\r\n    }\r\n    \r\n    \r\n};"}