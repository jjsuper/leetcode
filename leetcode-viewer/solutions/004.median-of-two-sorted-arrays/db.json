{"c++":"class Solution {\r\npublic:\r\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\r\n        if(nums1.size()>nums2.size()) return findMedianSortedArrays(nums2, nums1);\r\n        int m=nums1.size();\r\n        int n=nums2.size();\r\n        if(n==0) return 0;\r\n        \r\n        int imin=0, imax=m, half_len=(m+n+1)/2;\r\n\r\n        while(imin<=imax) {\r\n            int i=(imin+imax)/2;\r\n            int j=half_len-i;\r\n            if(i<m && nums2[j-1]>nums1[i])  imin=i+1;\r\n            else if(i>0 && nums1[i-1]>nums2[j]) imax=i-1;\r\n            else {\r\n                int max_left, min_right;\r\n                if(i==0) max_left=nums2[j-1];\r\n                else if(j==0) max_left=nums1[i-1];\r\n                else max_left=max(nums1[i-1], nums2[j-1]);\r\n                \r\n                if((m+n)%2==1) return max_left;\r\n                \r\n                if(i==m) min_right=nums2[j];\r\n                else if(j==n) min_right=nums1[i];\r\n                else min_right=min(nums1[i], nums2[j]);\r\n                \r\n                return (max_left+min_right)/2.0;\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n};"}