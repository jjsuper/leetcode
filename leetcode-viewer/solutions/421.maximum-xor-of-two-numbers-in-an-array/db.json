{"c++":"class Solution {\r\nprivate:\r\n    struct TrieNode {\r\n        TrieNode* t[2];\r\n        TrieNode() {t[0]=t[1]=NULL;}\r\n    };\r\n    \r\n    TrieNode* root;\r\n    \r\n    void insert(TrieNode*& root, int num) {\r\n        if(!root) root=new TrieNode();\r\n        TrieNode *p=root;\r\n        for(int i=31; i>=0; i--) {\r\n            int d=((num&(1<<i))>0);\r\n            if(p->t[d]==NULL) \r\n                p->t[d]=new TrieNode();\r\n            p=p->t[d];\r\n        }\r\n    }\r\n    \r\npublic:\r\n    int findMaximumXOR(vector<int>& nums) {\r\n        root=NULL;\r\n        for(auto n:nums)\r\n            insert(root, n);\r\n        \r\n        int maxres=0;\r\n        for(auto n:nums) {\r\n            int value=0;\r\n            TrieNode* p=root;\r\n            for(int i=31; i>=0; i--) {\r\n                int d=((n&(1<<i))>0);\r\n                if(p->t[1-d]) {\r\n                    p=p->t[1-d];\r\n                    value |= (1<<i);\r\n                    //if(value<maxres) break;\r\n                }\r\n                else {\r\n                    p=p->t[d];\r\n                }\r\n            }\r\n            maxres=max(maxres, value);\r\n        }\r\n        \r\n        return maxres;\r\n    }\r\n};"}