{"c++":"class Solution {\r\npublic:\r\n    vector<int> searchRange(vector<int>& nums, int target) {\r\n        vector<int> res(2, -1);\r\n        if(nums.empty()) return res;\r\n        res[0]=lower(nums, target);\r\n        if(res[0]==-1) return res; \r\n        res[1]=upper(nums, target);\r\n        return res;\r\n    }\r\nprivate:\r\n    int lower(vector<int>& nums, int target) {\r\n        int left=0, right=nums.size()-1;\r\n        while(left<right) {\r\n            int mid=(left+right)/2;\r\n            if(nums[mid]<target) {\r\n                left=mid+1;\r\n            }\r\n            else \r\n                right=mid;\r\n        }\r\n        //cout << left <<endl;\r\n        return nums[left]==target? left: -1;\r\n    }\r\n    int upper(vector<int>& nums, int target) {\r\n        int left=0, right=nums.size()-1;\r\n        while(left<right) {\r\n            int mid=(left+right)/2+1;\r\n            if(nums[mid]>target) {\r\n                right=mid-1;\r\n            }\r\n            else \r\n                left=mid;\r\n        }\r\n        //cout << right << endl;\r\n        return nums[right]==target? right: -1;\r\n        //return right;\r\n    }\r\n};"}