{"c++":"class Solution {\r\npublic:\r\n    vector<string> addOperators(string num, int target) {\r\n        vector<string> res;\r\n        if(num.empty()) return res;\r\n        helper(res, \"\", num, target, 0, 0, 0);\r\n        return res;\r\n    }\r\nprivate:\r\n    void helper(vector<string>& res, string path, string num, int target, int pos, long cur, long prev) {\r\n        if(pos==num.size()) {\r\n            if(cur==target)\r\n                res.push_back(path);\r\n                return;\r\n        }\r\n        \r\n        for(int i=pos; i<num.size(); ++i) {\r\n            if(num[pos]=='0' && i>pos) break;\r\n            string _str=num.substr(pos, i-pos+1);\r\n            long _value=stol(_str);\r\n            if(pos==0) {\r\n                helper(res, path+_str, num, target, i+1, _value, _value);\r\n            }\r\n            else {\r\n                helper(res, path+\"+\"+_str, num, target, i+1, cur+_value, _value);\r\n                helper(res, path+\"-\"+_str, num, target, i+1, cur-_value, -_value);\r\n                helper(res, path+\"*\"+_str, num, target, i+1, cur-prev+prev*_value, prev*_value);\r\n            }\r\n        }\r\n    }\r\n};"}