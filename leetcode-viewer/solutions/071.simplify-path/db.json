{"c++":"class Solution {\r\npublic:\r\n    string simplifyPath(string path) {/*\r\n        stack<string> s;\r\n        int i=0;\r\n        \r\n        while(i<path.size()) {\r\n            int len=1;\r\n            if(path[i]=='/') {\r\n                while(path[i+len]!='/'&&i+len<path.size()) len++;\r\n                cout << len;\r\n                if(len>1) {\r\n                    string cur=path.substr(i+1, len-1);\r\n                    cout<< cur;\r\n                    if(cur==\"..\") {\r\n                        if(!s.empty()) s.pop();\r\n                    }\r\n                    else if(cur!=\".\") {\r\n                        s.push(cur);\r\n                    }\r\n                }\r\n            }\r\n            i=i+len;\r\n        }\r\n        \r\n        string res=\"\";\r\n        while(!s.empty()) {\r\n            res='/'+s.top()+res;\r\n            s.pop();\r\n        }\r\n        \r\n        return res.empty() ? \"/\" : res;*/\r\n        stringstream is(path);\r\n        stack<string> s;\r\n        string cur;\r\n        while(getline(is, cur, '/')) {\r\n            if(cur==\"\" || cur==\".\") continue;\r\n            else if(cur==\"..\") { \r\n                if(!s.empty()) s.pop();\r\n            }\r\n            else s.push(cur);\r\n        }\r\n        \r\n        \r\n        string res=\"\";\r\n        while(!s.empty()) {\r\n            res='/'+s.top()+res;\r\n            s.pop();\r\n        }\r\n        \r\n        return res.empty() ? \"/\" : res;\r\n        \r\n    }\r\n};"}