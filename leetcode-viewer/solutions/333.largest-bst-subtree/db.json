{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int largestBSTSubtree(TreeNode* root) {\r\n        int res = 0, mn = INT_MIN, mx = INT_MAX;\r\n        isBST(root, mn, mx, res);\r\n        return res;\r\n    }\r\nprivate:\r\n    bool isBST(TreeNode* root, int& mx, int& mn, int &res) {\r\n        if(!root) return true;\r\n        int l_res=0, r_res=0, l_mx=INT_MAX, l_mn=INT_MIN, r_mx=INT_MAX, r_mn=INT_MIN;\r\n        \r\n        bool left=isBST(root->left, l_mx, l_mn, l_res);\r\n        bool right=isBST(root->right, r_mx, r_mn, r_res);\r\n        \r\n        if(left&&right) {\r\n            if((!root->left || root->val > l_mx) && (!root->right || root->val < r_mn)) {\r\n                res=l_res+r_res+1;\r\n                mx=root->right? r_mx: root->val;\r\n                mn=root->left? l_mn: root->val;\r\n                return true;\r\n            }\r\n        }\r\n        res=max(l_res, r_res);\r\n        return false;\r\n    }\r\n};"}