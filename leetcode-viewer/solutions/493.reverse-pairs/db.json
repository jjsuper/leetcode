{"c++":"class Solution {\r\npublic:\r\n    int reversePairs(vector<int>& nums) {\r\n        return mergesort(nums, 0, nums.size());\r\n    }\r\nprivate:\r\n    int mergesort(vector<int>& nums, int start, int end) {\r\n        if(start+1>=end) return 0;\r\n\r\n        int mid=(start+end)/2;\r\n        int cnt=mergesort(nums, start, mid) + mergesort(nums, mid, end);\r\n        \r\n\r\n        for(int i=start, j=mid; i<mid; ++i) {\r\n            while(j<end && nums[i]/2.0 > nums[j]) j++;\r\n            cnt += j-mid;\r\n        }\r\n        \r\n        int idx1=start, idx2=mid;\r\n        \r\n        vector<int> tmp(end-start, 0);\r\n        while(idx1<mid || idx2<end) {\r\n            tmp[idx1-start+idx2-mid]=(idx2==end || (idx1<mid && nums[idx1]<=nums[idx2]))? nums[idx1++]: nums[idx2++];\r\n        }\r\n        \r\n        for(int i=start; i<end; ++i) {\r\n            nums[i]=tmp[i-start];\r\n        }\r\n        \r\n        \r\n        return cnt;\r\n    }\r\n    \r\n};"}