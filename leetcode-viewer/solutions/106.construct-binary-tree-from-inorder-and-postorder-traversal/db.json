{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {\r\n        return buildTree(inorder, 0, inorder.size(), postorder, 0, postorder.size());\r\n    }\r\nprivate:\r\n    TreeNode* buildTree(vector<int>& inorder, int ibegin, int iend, vector<int>& postorder, int pbegin, int pend) {\r\n        if(ibegin>=iend || pbegin>=pend) return NULL;\r\n        \r\n        int mid=postorder[pend-1];\r\n        \r\n        TreeNode *root=new TreeNode(mid);\r\n        \r\n        auto f = find(inorder.begin(), inorder.end(), mid);\r\n        int diff=f-inorder.begin()-ibegin;\r\n        \r\n        root->left=buildTree(inorder, ibegin, ibegin+diff , postorder, pbegin, pbegin+diff);\r\n        root->right=buildTree(inorder, ibegin+diff+1, iend, postorder, pbegin+diff, pend-1);\r\n        \r\n        return root;\r\n    }\r\n};"}