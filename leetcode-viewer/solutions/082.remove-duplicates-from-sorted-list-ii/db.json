{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* deleteDuplicates(ListNode* head) {\r\n        if(!head) return NULL;\r\n        ListNode* nhead=new ListNode(0);\r\n        if(nhead==NULL) cout << \"nhead->next NULL\" << endl;\r\n        cout << nhead->val;\r\n        \r\n        \r\n        nhead->next=head;\r\n        \r\n        \r\n        ListNode* cur=head;\r\n        head=nhead;\r\n        \r\n        while(cur&&cur->next) {\r\n            if(cur->next->val==cur->val) {\r\n                cout << \"in\" << endl;\r\n                while(cur->next && cur->next->val==cur->val) cur=cur->next;\r\n                ListNode* tail=cur->next;\r\n                cur->next=NULL;\r\n                cur=head->next;\r\n                head->next=tail;\r\n                while(cur) {\r\n                    ListNode* tmp=cur;\r\n                    cur=cur->next;\r\n                    delete tmp;\r\n                    cout << \"delete\" << endl;\r\n                }\r\n                cur=tail;\r\n                \r\n                if(tail==NULL) cout << \"tail NULL\" << endl;\r\n            }\r\n            else {\r\n                cout << \"out\" << endl;\r\n                head=head->next;\r\n                cur=cur->next;\r\n            }\r\n        }\r\n        \r\n        if(nhead==NULL) cout << \"nhead->next NULL\" << endl;\r\n        \r\n        cout << nhead->val;\r\n        \r\n        return nhead->next;\r\n    }\r\n};"}