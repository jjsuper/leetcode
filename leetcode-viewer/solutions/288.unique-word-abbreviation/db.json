{"c++":"class ValidWordAbbr {\r\npublic:\r\n    ValidWordAbbr(vector<string> dictionary) {\r\n        for(string word: dictionary) {\r\n            string key=getkey(word);\r\n            if(hash.count(key)) {\r\n                if(hash[key]!=word) {\r\n                    hash[key]=\"\";\r\n                }\r\n            }\r\n            else { \r\n                hash[key]=word;\r\n            }\r\n        }\r\n    }\r\n    \r\n    bool isUnique(string word) {\r\n        return !hash.count(getkey(word)) || hash[getkey(word)]==word;\r\n    }\r\nprivate:\r\n    unordered_map<string, string> hash;\r\n    string getkey(string word) {\r\n        return word.size()>2? word[0]+to_string(word.size()-2)+word[word.size()-1] : word;\r\n    }\r\n};\r\n\r\n/**\r\n * Your ValidWordAbbr object will be instantiated and called as such:\r\n * ValidWordAbbr obj = new ValidWordAbbr(dictionary);\r\n * bool param_1 = obj.isUnique(word);\r\n */"}