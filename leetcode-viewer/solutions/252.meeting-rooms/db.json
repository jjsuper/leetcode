{"c++":"/**\r\n * Definition for an interval.\r\n * struct Interval {\r\n *     int start;\r\n *     int end;\r\n *     Interval() : start(0), end(0) {}\r\n *     Interval(int s, int e) : start(s), end(e) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool canAttendMeetings(vector<Interval>& intervals) {\r\n        if(intervals.size()<2) return true;\r\n        \r\n        sort(intervals.begin(), intervals.end(), [](Interval a, Interval b){\r\n            return a.start<b.start;\r\n        });\r\n        \r\n        for(int i=0; i<intervals.size()-1; ++i) {\r\n            if(intervals[i].end>intervals[i+1].start) return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n};"}