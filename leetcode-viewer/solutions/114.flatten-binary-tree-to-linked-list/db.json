{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    void flatten(TreeNode* root) {\r\n        if(root==NULL) return;\r\n        stack<TreeNode*> nodeStack;\r\n        \r\n        nodeStack.push(root);\r\n        TreeNode* pre=new TreeNode(0);\r\n   \r\n        while(!nodeStack.empty())\r\n        {\r\n            TreeNode* node=nodeStack.top();\r\n            nodeStack.pop();\r\n            \r\n            if(node->right!=NULL) nodeStack.push(node->right);\r\n            if(node->left!=NULL) nodeStack.push(node->left);\r\n            \r\n            node->left=node->right=NULL;\r\n            pre->right=node;\r\n            pre=pre->right;\r\n        }\r\n    }\r\n};"}