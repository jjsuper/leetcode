{"c++":"/**\r\n * Definition for singly-linked list with a random pointer.\r\n * struct RandomListNode {\r\n *     int label;\r\n *     RandomListNode *next, *random;\r\n *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    RandomListNode *copyRandomList(RandomListNode *head) {\r\n        unordered_map<RandomListNode*, RandomListNode*> hash;\r\n        \r\n        //step 1 copy\r\n        RandomListNode* node=head;\r\n        while(node) {\r\n            RandomListNode* tmp=new RandomListNode(node->label);\r\n            hash[node]=tmp;\r\n            node=node->next;\r\n        }\r\n        \r\n        \r\n        //step 2 assign pointer\r\n        node=head;\r\n        while(node) {\r\n            hash[node]->next=hash[node->next];\r\n            hash[node]->random=hash[node->random];\r\n            node=node->next;\r\n        }\r\n\r\n        \r\n        return hash[head];\r\n    }\r\n};"}