{"c++":"class Solution {\r\npublic:\r\n    int maxEnvelopes(vector<pair<int, int>>& envelopes) {\r\n        \r\n        sort(envelopes.begin(), envelopes.end(), [](pair<int, int> a, pair<int, int> b){\r\n            return a.first<b.first || (a.first==b.first && a.second>b.second);\r\n        });\r\n        \r\n        vector<int> h;\r\n        \r\n        for(auto e : envelopes) {\r\n            insert(h, e.second);\r\n        }\r\n        \r\n        return h.size();\r\n    }\r\n    \r\nprivate:\r\n    void insert(vector<int>& nums, int target) {\r\n        //cout << target << endl;\r\n        if(nums.empty()) nums.push_back(target);\r\n        if(nums.back() < target) nums.push_back(target);\r\n        \r\n        int left=0, right=nums.size()-1;\r\n        while(left<=right) {\r\n            int mid=(left+right)/2;\r\n            if(nums[mid] == target) {\r\n                return;\r\n            }\r\n            else if(nums[mid] < target) {\r\n                left = mid+1;\r\n            }\r\n            else {\r\n                right = mid-1;\r\n            }\r\n        }\r\n        \r\n        nums[left]=target;\r\n        return;\r\n    }\r\n};"}