{"c++":"class Solution {\r\npublic:\r\n    vector<int> numIslands2(int m, int n, vector<pair<int, int>>& positions) {\r\n        vector<int> root(m*n, -1);\r\n        vector<int> res;\r\n        vector<pair<int, int>> dirs={{1,0}, {-1,0}, {0,1}, {0,-1}};\r\n        int island=0;\r\n        \r\n        \r\n        for(auto pos: positions) {\r\n            int x=pos.first, y=pos.second, idx=x*n+y;\r\n            island++;\r\n            root[idx]=idx;\r\n            for(auto dir: dirs) {\r\n                int xd=x+dir.first, yd=y+dir.second, idxd=xd*n+yd;\r\n                if(xd>-1 && xd<m && yd>-1 && yd<n && root[idxd]!=-1) {\r\n                    int rootPos=findroot(idx, root), rootDir=findroot(idxd, root);\r\n                    if(rootPos!=rootDir) {\r\n                        root[rootPos]=rootDir;\r\n                        island--;\r\n                    }\r\n                }\r\n            }\r\n            res.push_back(island);\r\n        }\r\n        \r\n        return res;\r\n    }\r\nprivate:\r\n    int findroot(int idx, vector<int>& root) {\r\n        while(root[idx]!=idx) {\r\n            root[idx]=root[root[idx]];\r\n            idx=root[idx];\r\n        }\r\n        return idx;\r\n    }\r\n};"}