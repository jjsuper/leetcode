{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isSubtree(TreeNode* s, TreeNode* t) {\r\n        string ss=serialize(s);\r\n        string ts=serialize(t);\r\n        return ss.find(ts)!=std::string::npos;\r\n    }\r\nprivate:\r\n    string serialize(TreeNode* root) {\r\n        ostringstream out;\r\n        serialize(root, out);\r\n        return out.str();\r\n    }\r\n    \r\n    void serialize(TreeNode* root, ostringstream& out) {\r\n        if(root==NULL) {\r\n            out << \" \" << \"#\";\r\n        }\r\n        else {\r\n            out << \" \" << to_string(root->val);\r\n            serialize(root->left, out);\r\n            serialize(root->right, out);\r\n        }\r\n    }\r\n};"}