{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\r\n        stack<int> s1;\r\n        stack<int> s2;\r\n        stack<int> s3;\r\n        \r\n        while(l1) {\r\n            s1.push(l1->val);\r\n            l1=l1->next;\r\n        }\r\n        while(l2) {\r\n            s2.push(l2->val);\r\n            l2=l2->next;\r\n        }\r\n        \r\n        \r\n        int c=0, sum=0;\r\n        while(!s1.empty()&&!s2.empty()) {\r\n            sum=(s1.top()+s2.top()+c)%10;\r\n            c=(s1.top()+s2.top()+c)/10;\r\n            s3.push(sum);\r\n            s1.pop();\r\n            s2.pop();\r\n        }\r\n        \r\n        while(!s1.empty()) {\r\n            sum=(s1.top()+c)%10;\r\n            c=(s1.top()+c)/10;\r\n            s3.push(sum);\r\n            s1.pop();\r\n        }\r\n        while(!s2.empty()) {\r\n            sum=(s2.top()+c)%10;\r\n            c=(s2.top()+c)/10;\r\n            s3.push(sum);\r\n            s2.pop();\r\n        }\r\n        if(c) s3.push(c);\r\n        /*\r\n        while(!s3.empty()) {\r\n            cout << s3.top() << ' ';\r\n            s3.pop();\r\n        }*/\r\n        \r\n        \r\n        ListNode* head=new ListNode(0);\r\n        ListNode* cur=head;\r\n        while(!s3.empty()) {\r\n            ListNode* tmp=new ListNode(s3.top());\r\n            s3.pop();\r\n            cur->next=tmp;\r\n            cur=cur->next;\r\n        }\r\n        \r\n        return head->next;\r\n    }\r\n};"}