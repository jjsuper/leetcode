{"c++":"class Solution {\r\npublic:\r\n    int findNthDigit(int n) {\r\n        long base = 9, digits = 1;\r\n        while(n-base*digits>0) {\r\n            n -= base*digits;\r\n            digits++;\r\n            base *= 10;\r\n        }\r\n        \r\n        /*int num=-1;\r\n        for(int i=1; i<digit; ++i) {\r\n            base /= 10;\r\n            num += base;\r\n        }\r\n        int index=n/digit;\r\n        if(n==0) {num--; digit--;}\r\n        //else if(num==0) num=index+num;\r\n        else num=index+1+num;\r\n        \r\n        cout << num;\r\n        \r\n        index=n%digit;\r\n        if(index==0) return num%10;\r\n        for(int i=digit; i>index; --i) {\r\n            num /= 10;\r\n        }\r\n        \r\n        return num%10;*/\r\n        // step 2. calculate what the muber is.\r\n        int index = n % digits;\r\n        if (index == 0)\r\n            index = digits;\r\n        long num = 1;\r\n        for (int i = 1; i < digits; i ++)\r\n            num *= 10;\r\n        num += (index == digits) ? n / digits - 1 : n / digits;\r\n\r\n        // step 3. find out which digit in the number is we want.\r\n        for (int i = index; i < digits; i ++)\r\n            num /= 10;\r\n        return num % 10;\r\n    }\r\n};"}