{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int longestConsecutive(TreeNode* root) {\r\n        int inc=0, dec=0;\r\n        longestPath(root, inc, dec);\r\n        return res;\r\n    }\r\n    \r\nprivate:\r\n    int res=0;\r\n    void longestPath(TreeNode* root, int& inc, int& dec) {\r\n        if(root==NULL) {\r\n            inc=dec=0;\r\n            return;\r\n        }\r\n        \r\n        inc=dec=1;\r\n        if(root->left) {\r\n            int linc=1, ldec=1;\r\n            longestPath(root->left, linc, ldec);\r\n            if(root->val==root->left->val+1) {\r\n                inc=linc+1;\r\n            }\r\n            else if(root->val==root->left->val-1) {\r\n                dec=ldec+1;\r\n            }\r\n        }\r\n        if(root->right) {\r\n            int rinc=1, rdec=1;\r\n            longestPath(root->right, rinc, rdec);\r\n            if(root->val==root->right->val+1) {\r\n                inc=max(inc, rinc+1);\r\n            }\r\n            else if(root->val==root->right->val-1) {\r\n                dec=max(dec, rdec+1);\r\n            }\r\n        }\r\n        \r\n        res=max(res, inc+dec-1);\r\n        return;\r\n    }\r\n};"}