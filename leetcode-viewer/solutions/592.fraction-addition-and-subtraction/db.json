{"c++":"class Solution {\r\npublic:\r\n    string fractionAddition(string expression) {\r\n        int n=0, d=1;\r\n        int idx=0, p1=0, p2=0;\r\n        \r\n        if(expression[0]!='-') expression=\"+\"+expression;\r\n        while(idx<expression.size()) {\r\n            for(p1=idx+1; p1<expression.size() && expression[p1]!='/'; p1++);\r\n            int nn = stoi(expression.substr(idx+1, p1-idx-1));\r\n            for(p2=p1+1; p2<expression.size() && expression[p2]!='+' && expression[p2]!='-'; p2++);\r\n            int dd = stoi(expression.substr(p1+1, p2-p1-1));\r\n            \r\n            int c = GCD(d, dd);\r\n            n = (n*dd + (expression[idx]=='-'? -1: 1)*d*nn) / c;\r\n            d *= dd/c;\r\n            \r\n            idx=p2;\r\n        }\r\n        \r\n        return to_string(n/GCD(abs(n), d)) + \"/\" + to_string(d/GCD(abs(n), d));\r\n        \r\n    }\r\nprivate:\r\n    int GCD(int a, int b) {\r\n        while(b) {\r\n            int tmp=a%b;\r\n            a=b;\r\n            b=tmp;\r\n        }\r\n        return a;\r\n    }\r\n};"}