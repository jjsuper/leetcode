{"c++":"class ZigzagIterator {\r\npublic:\r\n    ZigzagIterator(vector<int>& v1, vector<int>& v2) {\r\n        if(!v1.empty()) q.push(make_pair(v1.begin(), v1.end()));\r\n        if(!v2.empty()) q.push(make_pair(v2.begin(), v2.end()));\r\n    }\r\n\r\n    int next() {\r\n        vector<int>::iterator it=q.front().first;\r\n        vector<int>::iterator end=q.front().second;\r\n        q.pop();\r\n        if(it+1!=end) q.push(make_pair(it+1, end));\r\n        return *it;\r\n    }\r\n\r\n    bool hasNext() {\r\n        return !q.empty();\r\n    }\r\nprivate:\r\n    queue<pair<vector<int>::iterator, vector<int>::iterator>> q;\r\n};\r\n\r\n/**\r\n * Your ZigzagIterator object will be instantiated and called as such:\r\n * ZigzagIterator i(v1, v2);\r\n * while (i.hasNext()) cout << i.next();\r\n */"}