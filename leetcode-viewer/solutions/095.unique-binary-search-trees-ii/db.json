{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<TreeNode*> generateTrees(int n) {\r\n        vector<TreeNode*> res;\r\n        if(n<1) return res;\r\n        return generateTrees(1, n);\r\n    }\r\nprivate:\r\n    vector<TreeNode*> generateTrees(int n, int m) {\r\n        vector<TreeNode*> res;\r\n        \r\n        if(n==m) {\r\n            TreeNode* tmp=new TreeNode(n);\r\n            res.push_back(tmp);\r\n            return res;\r\n        } \r\n        \r\n        if(n>m)\r\n        {\r\n            res.push_back(NULL);\r\n            return res;\r\n        }\r\n        \r\n        for(int i=n;i<=m;++i)\r\n        {\r\n            vector<TreeNode*> left=generateTrees(n, i-1);\r\n            vector<TreeNode*> right=generateTrees(i+1, m);\r\n            \r\n            for(int j=0; j<left.size(); ++j)\r\n                for(int k=0; k<right.size(); ++k)\r\n                {\r\n                    TreeNode* root=new TreeNode(i);\r\n                    root->left=left[j];\r\n                    root->right=right[k];\r\n                    res.push_back(root);\r\n                }\r\n        }\r\n        \r\n        return res;\r\n    }\r\n};"}