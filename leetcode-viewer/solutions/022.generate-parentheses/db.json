{"c++":"class Solution {\r\npublic:\r\n    vector<string> generateParenthesis(int n) {\r\n            vector<string> ret;\r\n        string s = \"\";\r\n        if (n <= 0)\r\n            return ret;\r\n\r\n        recurParenthesis(n, n, ret, s);\r\n        \r\n        return ret;\r\n    }\r\n\r\n    void recurParenthesis(int leftNum, int rightNum, vector<string> &ret, string temp)\r\n    {\r\n        //leftNum means the number of open parenthesis available,rightNum means the number of close parenthesis available\r\n        if (leftNum == 0 && rightNum == 0)\r\n        {\r\n            ret.push_back(temp);\r\n            return;\r\n        }\r\n\r\n        if (leftNum > 0)\r\n            recurParenthesis(leftNum-1, rightNum, ret, temp+'(');\r\n\r\n        if (rightNum > 0)\r\n        {\r\n            if (leftNum < rightNum)\r\n                recurParenthesis(leftNum, rightNum-1, ret, temp+')');\r\n        }\r\n    }\r\n        \r\n\r\n};"}