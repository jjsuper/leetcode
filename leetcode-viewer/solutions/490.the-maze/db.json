{"c++":"class Solution {\r\npublic:\r\n    bool hasPath(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {\r\n        stack<pair<int, int>> stops;\r\n        //vector<pair<int, int>> dirs={{1,0},{-1,0},{0,1},{0,-1}};\r\n        vector<vector<bool>> visited(maze.size(), vector<bool>(maze[0].size(),0));\r\n        \r\n        stops.push(make_pair(start[0],start[1]));\r\n        visited[start[0]][start[1]]=1;\r\n        \r\n        while(!stops.empty()) {\r\n            //int x=stops.top().first, y=stops.top().second;\r\n            stack<pair<int, int>> reach;\r\n            reach=getreach(maze, stops.top(), visited);\r\n            stops.pop();\r\n            \r\n            while(!reach.empty()) {\r\n                int i=reach.top().first, j=reach.top().second;\r\n                cout << i << j << endl;\r\n                if(i==destination[0]&&j==destination[1]) return true;\r\n                //if(visited[i][j]==0) {\r\n                    visited[i][j]=1;\r\n                    stops.push(reach.top());\r\n                //}\r\n                reach.pop();\r\n            }\r\n            \r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        return false;\r\n    }\r\n    \r\n    stack<pair<int, int>> getreach(vector<vector<int>>& maze, pair<int, int>& start, vector<vector<bool>>& visited) {\r\n        stack<pair<int, int>> res;\r\n        //\r\n        int x=start.first, y=start.second;\r\n        while(x<maze.size()-1 && !maze[x+1][y]) x++;\r\n        if(visited[x][y]==0) { res.push(make_pair(x,y)); cout << x << y << \"x++\" << endl;}\r\n        //\r\n        x=start.first; y=start.second;\r\n        while(x>0 && !maze[x-1][y]) x--;\r\n        if(visited[x][y]==0) {res.push(make_pair(x,y)); cout << x << y << \"x--\" << endl;}\r\n        //\r\n        x=start.first; y=start.second;\r\n        while(y<maze[0].size()-1 && !maze[x][y+1]) y++;\r\n        if(visited[x][y]==0) {res.push(make_pair(x,y)); cout << x << y << \"y++\" << endl;}\r\n        //\r\n        x=start.first; y=start.second;\r\n        while(y>0 && !maze[x][y-1])  y--;\r\n        if(visited[x][y]==0) {res.push(make_pair(x,y));   cout << x << y << \"y--\" << endl;}   \r\n        \r\n        return res;\r\n    }\r\n    \r\n};"}