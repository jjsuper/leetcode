{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* reverseBetween(ListNode* head, int m, int n) {\r\n        ListNode *nhead = new ListNode(0);\r\n        nhead->next=head;\r\n        ListNode *beginNode=nhead;\r\n        ListNode *endNode;\r\n        \r\n        \r\n        \r\n        for(int i=m; i>1; i--)\r\n        {\r\n            beginNode=beginNode->next;\r\n        }\r\n        \r\n        \r\n        endNode=beginNode->next;\r\n        \r\n        //cout << beginNode->val << \" \" << endNode->val << endl;\r\n        print(nhead);\r\n        for(int i=m; i<n; ++i)\r\n        {\r\n            ListNode *tmp=endNode->next;\r\n            endNode->next=tmp->next;\r\n            tmp->next=beginNode->next;\r\n            beginNode->next=tmp;\r\n            print(nhead);\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        return nhead->next;\r\n    }\r\nprivate:\r\n    void print(ListNode* head)\r\n    {\r\n        while(head)\r\n        {\r\n            cout << head->val << \" \";\r\n            head=head->next;\r\n        }\r\n        cout << endl;\r\n    }\r\n    \r\n    \r\n};"}