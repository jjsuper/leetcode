{"c++":"class Solution {\r\npublic:\r\n    int findPaths(int m, int n, int N, int i, int j) {\r\n        /*queue<pair<int, int>> q;\r\n        //vector<pair<int, int>> dirs={{1,0}, {-1,0}, {0,1}, {0,-1}};\r\n        int cnt=0;\r\n        \r\n        q.push(make_pair(i,j));\r\n        while(!q.empty() && N) {\r\n            N--;\r\n            int size=q.size();\r\n            for(int k=0; k<size; ++k) {\r\n                int x=q.front().first, y=q.front().second;\r\n                q.pop();\r\n                \r\n                if(N) {\r\n                    if(x>0) q.push(make_pair(x-1, y));\r\n                    if(x+1<m) q.push(make_pair(x+1, y));\r\n                    if(y>0) q.push(make_pair(x, y-1));\r\n                    if(y+1<n) q.push(make_pair(x, y+1));\r\n                }\r\n                \r\n                cnt += (x==0) + (x==m-1) + (y==0) + (y==n-1);\r\n                cnt = cnt % 1000000007;\r\n            }\r\n            \r\n        }\r\n        \r\n        */\r\n        \r\n        int MOD=1000000007;\r\n        \r\n        vector<vector<int>> cur(m, vector<int>(n, 0));\r\n        int dirs[4][2]={{1,0}, {-1,0}, {0,1}, {0,-1}};\r\n        cur[i][j]=1;\r\n        int cnt=0;\r\n        \r\n        for(int k=0; k<N; ++k) {\r\n            vector<vector<int>> next(m, vector<int>(n, 0));\r\n            for(int r=0; r<m; ++r) {\r\n                for(int c=0; c<n; ++c) {\r\n                    for(auto dir : dirs) {\r\n                        int nr=r+dir[0];\r\n                        int nc=c+dir[1];\r\n                        if(nr<0 || nr>=m || nc<0 || nc>=n) {\r\n                            cnt = (cnt+cur[r][c]) % MOD;\r\n                        }\r\n                        else {\r\n                            next[nr][nc] = (next[nr][nc] + cur[r][c]) % MOD;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            cur=next;\r\n        }\r\n        \r\n\r\n        return cnt;\r\n    }\r\n};"}