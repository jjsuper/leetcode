{"c++":"class Solution {\r\npublic:\r\n    int longestLine(vector<vector<int>>& M) {\r\n        int m=M.size();\r\n        int n=m? M[0].size(): 0;\r\n        if(m==0 || n==0) return 0;\r\n        int res=0;\r\n        vector<vector<vector<int>>> dp(m, vector<vector<int>>(n, vector<int>(4,0)));\r\n        \r\n        for(int i=0; i<m; ++i) {\r\n            for(int j=0; j<n; ++j) {\r\n                if(M[i][j]==1) {\r\n                    for(int k=0; k<4; ++k) dp[i][j][k]=1;\r\n                    \r\n                    if(i>0 && M[i-1][j]==1) dp[i][j][0]+=dp[i-1][j][0];\r\n                    if(j>0 && M[i][j-1]==1) dp[i][j][1]+=dp[i][j-1][1];\r\n                    if(i>0 && j>0 && M[i-1][j-1]==1) dp[i][j][2]+=dp[i-1][j-1][2];\r\n                    if(i>0 && j+1<n && M[i-1][j+1]==1) dp[i][j][3]+=dp[i-1][j+1][3];\r\n                    \r\n                    res=max(res, max(dp[i][j][0], dp[i][j][1]));\r\n                    res=max(res, max(dp[i][j][2], dp[i][j][3]));\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n};"}