{"c++":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\r\n        priority_queue<ListNode*, vector<ListNode*>, bool (*)(ListNode*, ListNode*)> heap([](ListNode* a, ListNode* b){return a->val > b->val;});\r\n\r\n        for(int i=0; i<lists.size(); ++i) {\r\n            if(lists[i]!=NULL) heap.push(lists[i]);\r\n        }  \r\n        \r\n        ListNode* dummy=new ListNode(0);\r\n        ListNode* cur=dummy;\r\n        while(!heap.empty()) {\r\n            cout << heap.top()->val;\r\n            \r\n            ListNode* tmp=heap.top();\r\n            heap.pop();\r\n            cur->next=tmp;\r\n            cur=tmp;\r\n            \r\n            if(tmp->next!=NULL) {\r\n                tmp=tmp->next;\r\n                //cur->next=NULL;\r\n                heap.push(tmp);\r\n            } \r\n        }\r\n    \r\n\r\n        return dummy->next;\r\n    }\r\n};"}