{"c++":"class Solution {\r\npublic:\r\n    bool makesquare(vector<int>& nums) {\r\n        if(nums.size()<4||nums.empty()) return false;\r\n        int sum=accumulate(nums.begin(), nums.end(), 0);\r\n        if(sum%4) return false;\r\n        vector<int> sums(4,0);\r\n        return dfs(nums, sums, 0, sum/4);\r\n    }\r\nprivate:\r\n    bool dfs(vector<int>& nums, vector<int>& sums, int index, int target) {\r\n        if(index==nums.size()) \r\n            if(sums[0]==sums[1] && sums[1]==sums[2] && sums[2]==target)\r\n                return true;\r\n            else \r\n                return false;\r\n        \r\n        for(int i=0; i<4; ++i) {\r\n            if(sums[i]+nums[index]>target) continue;\r\n            sums[i]+=nums[index];\r\n            if(dfs(nums, sums, index+1, target)) return true;\r\n            sums[i]-=nums[index];\r\n        }\r\n        \r\n        \r\n        \r\n        return false;\r\n    }\r\n    \r\n    \r\n};"}