{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* str2tree(string s) {\r\n        if(s.empty()) return NULL;\r\n        \r\n        string left=\"\";\r\n        string right=\"\";\r\n        int n=s.size(), i=0, cnt=0;\r\n        \r\n        for(i=0; i<s.size(); ++i) {\r\n            if(s[i]=='(') {\r\n                if(cnt==0) n=i;\r\n                cnt++;\r\n            }\r\n            else if(s[i]==')') {\r\n                cnt--;\r\n                if(cnt==0) break;\r\n            }\r\n        }\r\n        \r\n        cout << s.substr(0,n) << endl;\r\n        \r\n        TreeNode* root=new TreeNode(stoi(s.substr(0,n)));\r\n        if(s.size()>n) {\r\n            left=s.substr(n+1, i-n-1);\r\n            if(i<s.size()-1) {\r\n                right=s.substr(i+2, s.size()-i-3);\r\n            }\r\n        }\r\n        \r\n        root->left=str2tree(left);\r\n        root->right=str2tree(right);\r\n        \r\n        return root;\r\n    }\r\n};"}