{"c++":"class TicTacToe {\r\npublic:\r\n    /** Initialize your data structure here. */\r\n    TicTacToe(int n) : size(n) {\r\n        rows.resize(n, 0);\r\n        cols.resize(n, 0);\r\n        diagonal=0;\r\n        anti_diagonal=0;\r\n    }\r\n    \r\n    /** Player {player} makes a move at ({row}, {col}).\r\n        @param row The row of the board.\r\n        @param col The column of the board.\r\n        @param player The player, can be either 1 or 2.\r\n        @return The current winning condition, can be either:\r\n                0: No one wins.\r\n                1: Player 1 wins.\r\n                2: Player 2 wins. */\r\n    int move(int row, int col, int player) {\r\n        if(player==1) {\r\n            rows[row]++;\r\n            cols[col]++;\r\n            if(row==col) diagonal++;\r\n            if(row+col==size-1) anti_diagonal++;\r\n            if(rows[row]==size || cols[col]==size || diagonal==size || anti_diagonal==size) return 1;\r\n        }\r\n        else {\r\n            rows[row]--;\r\n            cols[col]--;\r\n            if(row==col) diagonal--;\r\n            if(row+col==size-1) anti_diagonal--;\r\n            if(rows[row]==-size || cols[col]==-size || diagonal==-size || anti_diagonal==-size) return 2;\r\n        }\r\n        return 0; \r\n    }\r\n    \r\nprivate:\r\n    vector<int> rows;\r\n    vector<int> cols;\r\n    int diagonal, anti_diagonal;\r\n    int size;\r\n};\r\n\r\n/**\r\n * Your TicTacToe object will be instantiated and called as such:\r\n * TicTacToe obj = new TicTacToe(n);\r\n * int param_1 = obj.move(row,col,player);\r\n */"}