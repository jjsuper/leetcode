{"c++":"class Solution {\r\npublic:\r\n    vector<vector<string>> wordSquares(vector<string>& words) {\r\n        int n=words[0].size();\r\n        vector<vector<string>> res;\r\n        vector<string> cur;\r\n        \r\n        for(auto word: words) {\r\n            for(int i=0; i<n; ++i)\r\n                hash[word.substr(0, i)].push_back(word);\r\n        }    \r\n        \r\n        build(res, cur, 0, n);\r\n        \r\n        return res;\r\n    }\r\nprivate:\r\n    unordered_map<string, vector<string>> hash;\r\n    \r\n    void build(vector<vector<string>>& res, vector<string>& cur, int i, int n) {\r\n        if(i==n) {\r\n            res.push_back(cur);\r\n            return;\r\n        }\r\n        string prefix;\r\n        for(int j=0; j<i; ++j) {\r\n            prefix=prefix+cur[j][i];\r\n        }\r\n        for(string word: hash[prefix]) {\r\n            cur.push_back(word);\r\n            build(res, cur, i+1, n);\r\n            cur.pop_back();\r\n        }\r\n    }\r\n};"}