{"c++":"class Solution {\r\npublic:\r\n    vector<vector<int>> permuteUnique(vector<int>& nums) {\r\n        vector<int> cur;\r\n        set<vector<int>> res;\r\n        helper(nums, cur, res);\r\n        return vector<vector<int>>(res.begin(), res.end());\r\n    }\r\nprivate:\r\n    void helper(vector<int>& n, vector<int>& cur, set<vector<int>>& res) {\r\n        if(n.empty()) {\r\n            res.insert(cur);\r\n            return;\r\n        }\r\n        \r\n        for(int i=0; i<n.size(); ++i) {\r\n            int tmp=n[i];\r\n            cur.push_back(n[i]);\r\n            n.erase(n.begin()+i);\r\n            helper(n, cur, res);\r\n            n.insert(n.begin()+i,tmp);\r\n            cur.pop_back();\r\n        }\r\n    }\r\n    \r\n};"}