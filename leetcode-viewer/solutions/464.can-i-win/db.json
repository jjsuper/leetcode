{"c++":"class Solution {\r\npublic:\r\n    bool canIWin(int maxChoosableInteger, int desiredTotal) {\r\n        if(maxChoosableInteger>=desiredTotal) return true;\r\n        int sum=(maxChoosableInteger+1)*maxChoosableInteger/2;\r\n        if(sum<desiredTotal) return false;\r\n        \r\n        int used=0;\r\n        return canIWin(maxChoosableInteger, desiredTotal, used);\r\n            \r\n    }\r\n    \r\nprivate:\r\n    unordered_map<int, bool> hash;\r\n    bool canIWin(int maxChoosableInteger, int desiredTotal, int used) {\r\n        if(desiredTotal<=0) return false;\r\n        if(hash.count(used)) return hash[used];\r\n        \r\n        for(int i=1; i<=maxChoosableInteger; ++i) {\r\n            int n=1<<(i-1);\r\n            if((n&used)==0) {\r\n                used |= n;\r\n                \r\n                if(!canIWin(maxChoosableInteger, desiredTotal-i, used)) {\r\n                    used ^= n;\r\n                    hash[used]=true;\r\n                    return true;\r\n                }\r\n                \r\n                \r\n                used ^= n;\r\n            }\r\n        }\r\n        \r\n        \r\n        hash[used]=false;\r\n        return false;\r\n    }\r\n    \r\n};"}