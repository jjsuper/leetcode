{"c++":"class Solution {\r\npublic:\r\n    vector<vector<int>> findSubsequences(vector<int>& nums) {\r\n        set<vector<int>> resset;\r\n        vector<int> cur;\r\n        helper(nums, 0, cur, resset);\r\n        return vector<vector<int>>(resset.begin(), resset.end());\r\n    }\r\nprivate:\r\n    void helper(vector<int>& nums, int index, vector<int>& cur, set<vector<int>>& res) {\r\n        if(cur.size()>1) res.insert(cur);\r\n        \r\n        for(int i=index; i<nums.size(); ++i) {\r\n            if(cur.size()==0 || nums[i]>=cur.back()) {\r\n                cur.push_back(nums[i]);\r\n                helper(nums, i+1, cur, res);\r\n                cur.pop_back();\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n};"}