{"c++":"class Solution {\r\npublic:\r\n    vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {\r\n        if(n==1) return vector<int>({0});\r\n        unordered_map<int, unordered_set<int>> adj;\r\n        vector<int> leaves;\r\n        \r\n        for(auto it: edges) {\r\n            adj[it.first].insert(it.second);\r\n            adj[it.second].insert(it.first);\r\n        }\r\n        \r\n        for(auto it: adj) {\r\n            if(it.second.size()==1) leaves.push_back(it.first);\r\n        }\r\n        \r\n        while(n>2) {\r\n            n-=leaves.size();\r\n            vector<int> newleaves;\r\n            for(auto it: leaves) {\r\n                for(auto next: adj[it]) {\r\n                    adj[next].erase(it);\r\n                    if(adj[next].size()==1) newleaves.push_back(next);\r\n                }\r\n            }\r\n            leaves.clear();\r\n            leaves=newleaves;\r\n        }\r\n        return leaves;\r\n    }\r\n};"}